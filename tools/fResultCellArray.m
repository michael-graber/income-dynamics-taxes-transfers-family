function [CellArray] = fResultCellArray(Result,Param)
% This file creates a matrix of the results with the following structure

% col 1 : cohort
% col 2 : model
% col 3 : education
% col 4 : income
% col 5 : sample
% col 6 : age
% col 7 : rhoMale
% col 8 : VarAlphaMale
% col 9 : VarBetaMale
% col 10 : rhoAlphaBetaMale
% col 11 : sigma2Male
% col 12 : omega2Male
% col 13: thetaMale
% col 14: rhoSpouse
% col 15 : VarAlphaSpouse
% col 16 : VarBetaSpouse
% col 17 : rhoAlphaBetaSpouse
% col 18 : sigma2Spouse
% col 19 : omega2Spouse
% col 20 : thetaSpouse
% col 21 : sigmaMaleSpouse
% col 22 : omegaMaleSpouse
% col 23 : CovAlphaMaleSpouse
% col 24 : CovBetaMaleSpouse 
    
if length(Param.cohort) > 1
    cohort = 19251964;
else
    cohort = num2str(Param.cohort);
end;


for i=1:length(Result.age)
    CellArray(i,:) = {
                        cohort, ...
                        Param.model, ...
                        Param.education, ...
                        Param.income, ...
                        Param.sample,...
                        Result.age(i),...
                        Result.rhoMale, ...
                        Result.VarAlphaMale, ...
                        Result.VarBetaMale, ...
                        Result.rhoAlphaBetaMale, ....
                        Result.sigma2Male(i), ...
                        Result.omega2Male(i+2),... % without initial values
                        Result.thetaMale, ...
                        Result.rhoSpouse, ...
                        Result.VarAlphaSpouse, ...
                        Result.VarBetaSpouse, ...
                        Result.rhoAlphaBetaSpouse, ...
                        Result.sigma2Spouse(i), ...
                        Result.omega2Spouse(i+2),....
                        Result.thetaSpouse,...
                        Result.sigmaMaleSpouse(i),...
                        Result.omegaMaleSpouse(i+2),...
                        Result.CovAlphaMaleSpouse,...
                        Result.CovBetaMaleSpouse}; 
                        
end;

% Replace NaN's with empty cells (makes it easier to deal with in Stata)

CellArray(cellfun(@(x) any(isnan(x)),CellArray)) = {''};

end

